<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JhonRain&#39;s Blog</title>
  <subtitle>Victory Loves Preparation</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jiang-yu.cn/"/>
  <updated>2016-11-15T16:29:24.000Z</updated>
  <id>http://www.jiang-yu.cn/</id>
  
  <author>
    <name>Jiang Yu</name>
    <email>jhonyucoder@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SSH项目--数据没有持久化到DB</title>
    <link href="http://www.jiang-yu.cn/2016/11/15/Hibernate/SSH--hibernate%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98/"/>
    <id>http://www.jiang-yu.cn/2016/11/15/Hibernate/SSH--hibernate事务问题/</id>
    <published>2016-11-15T15:56:51.000Z</published>
    <updated>2016-11-15T16:29:24.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;　　做项目的时候，发现配置注解事务之后，数据还是不能持续化到数据库，调试了好久，网上google后，才知道原来需要有一个重要的配置没有配置，导致事务配置了数据不能持续化到数据库中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;　　SSH整合, Hibernate正确执行了save方法，但是数据没有保存到数据库,最开始以为是事务配置的问题，项目中采用的是@Transaction注解的方式主动的添加事务的，折腾了好久都没有达到预期的效果，最后只能google一下，才发现hibernate的配置出现了问题。
　　&lt;/p&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;　　如果配置了@Transactional，默认org.hibernate.transaction.JDBCTransaction在事务开始时将自动提交设置为false，事务结束或者回滚后再设置为原始的状态。从上面的问题来看，应该是事务操作没有提交，最终数据没有持续化到数据库中，针对此问题可以去了解一下Hibernate中对象的几种状态来结合分析，下面给出最终解决方案。&lt;/p&gt;
&lt;h2 id=&quot;问题解决&quot;&gt;&lt;a href=&quot;#问题解决&quot; class=&quot;headerlink&quot; title=&quot;问题解决&quot;&gt;&lt;/a&gt;问题解决&lt;/h2&gt;&lt;p&gt;　　Srping的配置文件里的Hibernate的属性配置必须加上：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Hibernate/hibernate_autocommit.png&quot; alt=&quot;hibernate_autocommit&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;property name=&amp;quot;hibernateProperties&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;props&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;org.hibernate.dialect.MySQL5Dialect&amp;lt;/prop&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;prop key=&amp;quot;current_session_context_class&amp;quot;&amp;gt;thread&amp;lt;/prop&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;prop key=&amp;quot;hibernate.connection.autocommit&amp;quot;&amp;gt;true&amp;lt;/prop&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/props&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　事务的管理配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean name=&amp;quot;transactionManager&amp;quot; class=&amp;quot;org.springframework.orm.hibernate4.HibernateTransactionManager&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;property name=&amp;quot;sessionFactory&amp;quot; ref=&amp;quot;sessionFactory&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;tx:annotation-driven transaction-manager=&amp;quot;transactionManager&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;　　从今天遇到的这个问题处理时间和效率来看，感觉平时工作中可能只是注重实践，原理性的东西还是需要去补一补的，加油……&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;　　做项目的时候，发现配置注解事务之后，数据还是不能持续化到数据库，调试了好久，网上google后，才知道原来需要有一个重要的配置没有配置，导致事务配置了数据不能持续化到数据库中。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hibernate" scheme="http://www.jiang-yu.cn/categories/Hibernate/"/>
    
    
      <category term="Hibernate" scheme="http://www.jiang-yu.cn/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Spring+Log4j+ActiveMQ实现简单的日志收集</title>
    <link href="http://www.jiang-yu.cn/2016/11/14/Log4j/Log4j%E8%BF%9C%E7%A8%8B%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.jiang-yu.cn/2016/11/14/Log4j/Log4j远程打印日志信息/</id>
    <published>2016-11-14T11:20:51.000Z</published>
    <updated>2016-11-14T16:02:34.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;　　上一篇中讲解过log4j的一些基础知识以及日志文件的分模块存储，但是项目在生产环境的时候，日志刷屏看起来非常不舒服，于是就想通过远程来收集别的系统日志来实现日志和业务系统分离的想法。本文中主要采用的是ActiveMQ消息中间件来实现远程日志打印。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　随着业务系统的发展，日志数据也必须要十分重视，日志在生产环境中系统问题的排查有着非常重要的作用。下面就来一步一步来实现一个远程日志系统。
　　&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;　　首先要定义一个日志的监听器，业务系统生产(produce)日志信息到统一消息中间件（ActiveMQ），然后日志系统不断的从ActiveMQ中去消费(consume)信息。
　　&lt;/p&gt;
&lt;h2 id=&quot;日志系统搭建&quot;&gt;&lt;a href=&quot;#日志系统搭建&quot; class=&quot;headerlink&quot; title=&quot;日志系统搭建&quot;&gt;&lt;/a&gt;日志系统搭建&lt;/h2&gt;&lt;p&gt;　　日志系统的实现非常简单，就是要定义一个消息的监听器，不断的从ＭＱ中去获取生产者（业务系统）产生的日志消息，可以参考&lt;a href=&quot;http://activemq.apache.org/how-do-i-use-log4j-jms-appender-with-activemq.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MQ的官方文档&lt;/a&gt;&lt;br&gt;　　下面我们就搭建一个简单的日志系统：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/log4j_jms_project_struct.png&quot; alt=&quot;project_stuct&quot;&gt;&lt;br&gt;　　项目基于Maven+Spring MVC，就一个日志监听器类，还有一个spring的配置文件，提出核心代码和配置文件如下&lt;br&gt;　　&lt;strong&gt;LogMessageListener.java&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.rain.jhon;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Date;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import javax.jms.Message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import javax.jms.MessageListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.activemq.command.ActiveMQObjectMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.log4j.spi.LoggingEvent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import com.jifenn.framework.util.TimeUtil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;p&amp;gt;功能描述&amp;lt;/br&amp;gt; 日志信息的监听 &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @className  LogMessageListener&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author  jiangyu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @date  2016年11月14日 下午1:41:20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @version  v1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class LogMessageListener implements MessageListener&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void onMessage(Message message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            /** receive log event in your consumer **/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LoggingEvent event = (LoggingEvent)((ActiveMQObjectMessage)message).getObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StringBuilder logStr = new StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logStr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(&amp;quot;Logging project:[ &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(TimeUtil.Date2Sring(new Date(event.getTimeStamp()), TimeUtil.PATTERN_DATE_7))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(&amp;quot; ]--[Class]: &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(event.getLoggerName())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(&amp;quot;, [ThreadName] : &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(event.getThreadName())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(&amp;quot;,Log Level--[&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(event.getLevel())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(&amp;quot;] :&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .append(event.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            /** 打印出日志 **/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(logStr.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        catch (Exception e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Spring.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xsi:schemaLocation=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        http://www.springframework.org/schema/beans &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;jmsTemplate&amp;quot; class=&amp;quot;org.springframework.jms.core.JmsTemplate&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;property name=&amp;quot;connectionFactory&amp;quot; ref=&amp;quot;connectionFactory&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;connectionFactory&amp;quot; class=&amp;quot;org.springframework.jms.connection.SingleConnectionFactory&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;property name=&amp;quot;targetConnectionFactory&amp;quot; ref=&amp;quot;targetConnectionFactory&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;targetConnectionFactory&amp;quot; class=&amp;quot;org.apache.activemq.ActiveMQConnectionFactory&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;property name=&amp;quot;brokerURL&amp;quot; value=&amp;quot;tcp://localhost:61616&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;bean id=&amp;quot;topicDestination0&amp;quot; class=&amp;quot;org.apache.activemq.command.ActiveMQTopic&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;constructor-arg name=&amp;quot;name&amp;quot; value=&amp;quot;EbsLogTopic&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;jmsContainer0&amp;quot; class=&amp;quot;org.springframework.jms.listener.DefaultMessageListenerContainer&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;property name=&amp;quot;connectionFactory&amp;quot; ref=&amp;quot;connectionFactory&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;!-- &amp;lt;property name=&amp;quot;destination&amp;quot; ref=&amp;quot;queueDestination&amp;quot; /&amp;gt;  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;property name=&amp;quot;destination&amp;quot; ref=&amp;quot;topicDestination0&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;property name=&amp;quot;messageListener&amp;quot; ref=&amp;quot;logMessageListener&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;topicDestination1&amp;quot; class=&amp;quot;org.apache.activemq.command.ActiveMQTopic&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;constructor-arg name=&amp;quot;name&amp;quot; value=&amp;quot;logTopic&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;jmsContainer1&amp;quot; class=&amp;quot;org.springframework.jms.listener.DefaultMessageListenerContainer&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;property name=&amp;quot;connectionFactory&amp;quot; ref=&amp;quot;connectionFactory&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;!-- &amp;lt;property name=&amp;quot;destination&amp;quot; ref=&amp;quot;queueDestination&amp;quot; /&amp;gt;  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;property name=&amp;quot;destination&amp;quot; ref=&amp;quot;topicDestination1&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;property name=&amp;quot;messageListener&amp;quot; ref=&amp;quot;logMessageListener&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;bean id=&amp;quot;logMessageListener&amp;quot; class=&amp;quot;com.rain.jhon.LogMessageListener&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;web.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;web-app id=&amp;quot;WebApp_ID&amp;quot; version=&amp;quot;3.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;context-param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;param-value&amp;gt;classpath:spring.xml&amp;lt;/param-value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/context-param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- Use to load spring.xml --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;listener&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;listener-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            org.springframework.web.context.ContextLoaderListener&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/listener-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/listener&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;welcome-file-list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;welcome-file&amp;gt;index.jsp&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/welcome-file-list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　上面三个文件就构成了一个简单的日志监听系统，但是还少了一个重要的部分，那就是activemq，由于我是在windows平台上，所以可以直接使用，到apache官网下载windows版本的ActiveMQ，这里我使用windows-64版本：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/log4j_activeMQ.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;　　启动activeMQ,&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/start_activeMQ.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;　　然后进入后台管理页面，&lt;a href=&quot;http://localhost:8161,用户名/密码:admin/admin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8161,用户名/密码:admin/admin&lt;/a&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/activeMQ_index.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;　　启动日志系统，查看activeMQ中的Topic,可以发现我们配置的两个Topic,如下图所示&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/spring_jms_config.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/start_log_system.png&quot; alt=&quot;activeMq&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;业务系统配置log4j&quot;&gt;&lt;a href=&quot;#业务系统配置log4j&quot; class=&quot;headerlink&quot; title=&quot;业务系统配置log4j&quot;&gt;&lt;/a&gt;业务系统配置log4j&lt;/h2&gt;&lt;p&gt;　　上面的配置都ok后，我们就来配置业务系统中的log4j到jms的连接,假设我们有业务系统Maven+spring+…&lt;/p&gt;
&lt;h3 id=&quot;log4j-properties的配置：&quot;&gt;&lt;a href=&quot;#log4j-properties的配置：&quot; class=&quot;headerlink&quot; title=&quot;log4j.properties的配置：&quot;&gt;&lt;/a&gt;log4j.properties的配置：&lt;/h3&gt;&lt;p&gt;　　这个配置可以参考官网的配置：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/active_document_01.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;log4j.rootLogger=info,jms,stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.org.apache.activemq=INFO,stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout=org.apache.log4j.ConsoleAppender &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout.layout=org.apache.log4j.PatternLayout &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout.layout.ConversionPattern=%d %-5p %c&amp;#123;1&amp;#125;(%L) [%X&amp;#123;ip&amp;#125;] - %M %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###########################################################################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Configure &amp;apos;jms&amp;apos; appender. You&amp;apos;ll also need jndi.properties file in order to make it work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms=org.apache.log4j.net.JMSAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms.ProviderURL=tcp://localhost:61616&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms.TopicBindingName=EbsLogTopic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.jms.layout.ConversionPattern=%d %-5p %c&amp;#123;1&amp;#125;(%L) [%X&amp;#123;ip&amp;#125;] - %M %m%n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;jndi-properties的配置&quot;&gt;&lt;a href=&quot;#jndi-properties的配置&quot; class=&quot;headerlink&quot; title=&quot;jndi.properties的配置&quot;&gt;&lt;/a&gt;jndi.properties的配置&lt;/h3&gt;&lt;p&gt;　　配置JNDI信息（实例工程结构和配置文件）&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/business_config_info.png&quot; alt=&quot;activeMq&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;测试效果&quot;&gt;&lt;a href=&quot;#测试效果&quot; class=&quot;headerlink&quot; title=&quot;测试效果&quot;&gt;&lt;/a&gt;测试效果&lt;/h2&gt;&lt;p&gt;　　启动日志监听系统&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/start_log_system02.png&quot; alt=&quot;activeMq&quot;&gt;&lt;br&gt;　　启动业务系统，访问接口，打印测试日志信息：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/demo_result.png&quot; alt=&quot;activeMq&quot;&gt;
　　&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;　　至此，就愉快的实现了远程打日志了，虽然看起来有点麻烦，但是实现了是不是有一种成就感呢？哈哈，加油。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;　　上一篇中讲解过log4j的一些基础知识以及日志文件的分模块存储，但是项目在生产环境的时候，日志刷屏看起来非常不舒服，于是就想通过远程来收集别的系统日志来实现日志和业务系统分离的想法。本文中主要采用的是ActiveMQ消息中间件来实现远程日志打印。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Log4j" scheme="http://www.jiang-yu.cn/categories/Log4j/"/>
    
    
      <category term="Log4j" scheme="http://www.jiang-yu.cn/tags/Log4j/"/>
    
  </entry>
  
  <entry>
    <title>Log4j整合模块中的日志分文件存放</title>
    <link href="http://www.jiang-yu.cn/2016/11/14/Log4j/Log4j%E5%88%86%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    <id>http://www.jiang-yu.cn/2016/11/14/Log4j/Log4j分文件存储/</id>
    <published>2016-11-14T11:20:51.000Z</published>
    <updated>2016-11-15T00:31:55.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;　　以前做项目都是一个项目里面配置一个日志文件，但是最近公司的业务系统是通过功能模块来划分，所以不同模块之间的日志记录的分开存放还是有必要的，方便后期通过日志定位问题，所以就试着用log4j配了一下，日志分类的实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　&lt;br&gt;　　日志是应用软件中不可缺少的部分，Apache的开源项目log4j是一个功能强大的日志组件,提供方便的日志记。&lt;/p&gt;
&lt;h2 id=&quot;Log4j基础知识的预备&quot;&gt;&lt;a href=&quot;#Log4j基础知识的预备&quot; class=&quot;headerlink&quot; title=&quot;Log4j基础知识的预备&quot;&gt;&lt;/a&gt;Log4j基础知识的预备&lt;/h2&gt;&lt;p&gt;　　Log4j支持两种配置文件格式，一种是XML格式的文件，一种是Java特性文件（键=值）。下面我们介绍使用Java特性文件做为配置文件的方法&lt;/p&gt;
&lt;h3 id=&quot;log4j的组成部分&quot;&gt;&lt;a href=&quot;#log4j的组成部分&quot; class=&quot;headerlink&quot; title=&quot;log4j的组成部分&quot;&gt;&lt;/a&gt;log4j的组成部分&lt;/h3&gt;&lt;p&gt;　　Log4j由三个重要的组件构成：日志信息的优先级，日志信息的输出目的地，日志信息的输出格式
　　&lt;/p&gt;
&lt;h4 id=&quot;１-日志信息的优先级&quot;&gt;&lt;a href=&quot;#１-日志信息的优先级&quot; class=&quot;headerlink&quot; title=&quot;１.日志信息的优先级&quot;&gt;&lt;/a&gt;１.日志信息的优先级&lt;/h4&gt;&lt;p&gt;　　日志信息的优先级从高到低有ERROR、WARN、INFO、DEBUG，分别用来指定这条日志信息的重要程度&lt;/p&gt;
&lt;h5 id=&quot;配置根Logger，其语法为：&quot;&gt;&lt;a href=&quot;#配置根Logger，其语法为：&quot; class=&quot;headerlink&quot; title=&quot;配置根Logger，其语法为：&quot;&gt;&lt;/a&gt;配置根Logger，其语法为：&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;log4j.rootLogger = [ level ] , appenderName, appenderName, …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;log4j.rootLogger=info, ServerDailyRollingFile, stdout&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　level 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。
　　&lt;/p&gt;
&lt;h4 id=&quot;２-日志信息的输出目的地&quot;&gt;&lt;a href=&quot;#２-日志信息的输出目的地&quot; class=&quot;headerlink&quot; title=&quot;２.日志信息的输出目的地&quot;&gt;&lt;/a&gt;２.日志信息的输出目的地&lt;/h4&gt;&lt;p&gt;　　日志信息的输出目的地指定了日志将打印到控制台还是文件中&lt;br&gt;　　２.１配置日志信息输出目的地Appender，其语法为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;log4j.appender.stdout=org.apache.log4j.ConsoleAppender&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　其中，Log4j提供的appender有以下几种：
　　&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.log4j.ConsoleAppender（控制台），&lt;br&gt;org.apache.log4j.FileAppender（文件），&lt;br&gt;org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），&lt;br&gt;org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），&lt;br&gt;org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;３-日志信息的输出格式-布局&quot;&gt;&lt;a href=&quot;#３-日志信息的输出格式-布局&quot; class=&quot;headerlink&quot; title=&quot;３.日志信息的输出格式(布局)&quot;&gt;&lt;/a&gt;３.日志信息的输出格式(布局)&lt;/h4&gt;&lt;p&gt;　　日志输出格式则控制了日志信息的显示内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.log4j.HTMLLayout（以HTML表格形式布局），&lt;br&gt;org.apache.log4j.PatternLayout（可以灵活地指定布局模式），&lt;br&gt;org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），&lt;br&gt;org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，打印参数如下： %m 输出代码中指定的消息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL&lt;br&gt;%r 输出自应用启动到输出该log信息耗费的毫秒数&lt;br&gt;%c 输出所属的类目，通常就是所在类的全名&lt;br&gt;%t 输出产生该日志事件的线程名&lt;br&gt;%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”&lt;br&gt;%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921&lt;br&gt;%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;log4j分文件存储实现方案&quot;&gt;&lt;a href=&quot;#log4j分文件存储实现方案&quot; class=&quot;headerlink&quot; title=&quot;log4j分文件存储实现方案&quot;&gt;&lt;/a&gt;log4j分文件存储实现方案&lt;/h2&gt;&lt;p&gt;　　为了上面摘要描述的功能，我们可以自定义一个日志Appender来实现&lt;/p&gt;
&lt;h3 id=&quot;自定义Appender&quot;&gt;&lt;a href=&quot;#自定义Appender&quot; class=&quot;headerlink&quot; title=&quot;自定义Appender&quot;&gt;&lt;/a&gt;自定义Appender&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.jifenn.framework.frame.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.log4j.DailyRollingFileAppender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.log4j.Priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;p&amp;gt;功能描述&amp;lt;/br&amp;gt; 自定义日志Appender &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @className JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author jiangyu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @date 2016年11月14日 上午9:52:14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @version v1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class JFDailyRollingFileAppender extends DailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public boolean isAsSevereAsThreshold(Priority priority)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /** 只判断相同的范围（层级）**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return this.getThreshold().equals(priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置log4j-properties文件&quot;&gt;&lt;a href=&quot;#配置log4j-properties文件&quot; class=&quot;headerlink&quot; title=&quot;配置log4j.properties文件&quot;&gt;&lt;/a&gt;配置log4j.properties文件&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;log4j.rootLogger=info, ServerDailyRollingFile, stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout=org.apache.log4j.ConsoleAppender &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout.layout=org.apache.log4j.PatternLayout &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.stdout.layout.ConversionPattern=%d %-5p %c&amp;#123;1&amp;#125;(%L) [%X&amp;#123;ip&amp;#125;] - %M %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.com.jifenn.schedule = info,error,coreInfo,coreError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreInfo = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreInfo.File = /web/ebsapp/logs/schedule/info/info.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreInfo.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreInfo.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreInfo.Threshold = INFO &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.coreInfo=false  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreError = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreError.File = /web/ebsapp/logs/schedule/error/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreError.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreError.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.coreError.Threshold = ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.coreError=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.com.jifenn.draw = info,error,webInfo,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webInfo = info,webInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.File = /web/ebsapp/logs/draw/info/info.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.Threshold = INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webInfo=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webError = error,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.File = /web/ebsapp/logs/draw/error/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.Threshold = ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webError=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.com.jifenn.ebs.gift = info,error,webInfo,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webInfo = info,webInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.File = /web/ebsapp/logs/gift/info/info.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.Threshold = INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webInfo=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webError = error,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.File = /web/ebsapp/logs/gift/error/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.Threshold = ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webError=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.com.jifenn.ebs.mall = info,error,webInfo,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webInfo = info,webInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.File = /web/ebsapp/logs/mall/info/info.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.Threshold = INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webInfo=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webError = error,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.File = /web/ebsapp/logs/mall/error/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.Threshold = ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webError=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.com.jifenn.ebs.common = info,error,webInfo,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webInfo = info,webInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.File = /web/ebsapp/logs/common/info/info.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webInfo.Threshold = INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webInfo=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.logger.webError = error,webError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError = com.jifenn.framework.frame.log.JFDailyRollingFileAppender&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.File = /web/ebsapp/logs/common/error/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout = org.apache.log4j.PatternLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.layout.ConversionPattern = %-d&amp;#123;yyyy-MM-dd HH:mm:ss&amp;#125;  [ %t:%r ] - [ %p ]  %m%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.appender.webError.Threshold = ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j.additivity.webError=false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看效果&quot;&gt;&lt;a href=&quot;#查看效果&quot; class=&quot;headerlink&quot; title=&quot;查看效果&quot;&gt;&lt;/a&gt;查看效果&lt;/h3&gt;&lt;h4 id=&quot;查看模块的日志文件夹&quot;&gt;&lt;a href=&quot;#查看模块的日志文件夹&quot; class=&quot;headerlink&quot; title=&quot;查看模块的日志文件夹&quot;&gt;&lt;/a&gt;查看模块的日志文件夹&lt;/h4&gt;&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/Log4j_Split_File.png&quot; alt=&quot;split_file&quot;&gt;
　　&lt;/p&gt;
&lt;h4 id=&quot;查看模块的日志文件夹下的不同日志等级文件夹&quot;&gt;&lt;a href=&quot;#查看模块的日志文件夹下的不同日志等级文件夹&quot; class=&quot;headerlink&quot; title=&quot;查看模块的日志文件夹下的不同日志等级文件夹&quot;&gt;&lt;/a&gt;查看模块的日志文件夹下的不同日志等级文件夹&lt;/h4&gt;&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/Log4j/Log4j_Split_File_log_level.png&quot; alt=&quot;split_level&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;　　以前做项目都是一个项目里面配置一个日志文件，但是最近公司的业务系统是通过功能模块来划分，所以不同模块之间的日志记录的分开存放还是有必要的，方便后期通过日志定位问题，所以就试着用log4j配了一下，日志分类的实现。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Log4j" scheme="http://www.jiang-yu.cn/categories/Log4j/"/>
    
    
      <category term="Log4j" scheme="http://www.jiang-yu.cn/tags/Log4j/"/>
    
  </entry>
  
  <entry>
    <title>Java 8 Lambda表达式了解和应用</title>
    <link href="http://www.jiang-yu.cn/2016/11/12/Jdk/Java8--Lambda%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.jiang-yu.cn/2016/11/12/Jdk/Java8--Lambda介绍和使用/</id>
    <published>2016-11-12T07:20:51.000Z</published>
    <updated>2016-11-12T05:40:05.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;作为一名Java程序员，想想Jdk 9都快要出来了，必须要马上学习一下Jdk 8中的一些新特性了，早就听说了Java8中的Lambda表达式非常强大，一直都处于懒散状态，真的需要开始充充新知识了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　Java项目的升级是必然的，目前工作中的大部分项目都是在Jdk7的环境下使用，但是为了后期的发展，Jdk 8 是必然的一个选择，而且Java 8中的lambda(闭包)和虚拟扩展方法（default Method）都已经被炒得沸沸扬扬了，所以本文就来认识和介绍一下相关知识，学习函数式编程思想来开阔自己的思路。&lt;/p&gt;
&lt;h1 id=&quot;Lambda表达式初识&quot;&gt;&lt;a href=&quot;#Lambda表达式初识&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式初识&quot;&gt;&lt;/a&gt;Lambda表达式初识&lt;/h1&gt;&lt;p&gt;　　首先从一个简单的例子入手，来查看一下lambda表达式的效果，下面分别是java7和java8中创建一个线程的示例代码，&lt;br&gt;　　java7实现方式：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java_7_runnable.png&quot; alt=&quot;java7&quot;&gt;&lt;br&gt;　　java8实现方式：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java_lambda_runnable.png&quot; alt=&quot;java8&quot;&gt;&lt;br&gt;　　从上面的实例代码中可以看出，Java8的lambda表达式确实是非常的简洁和方便，代码中使用() -&amp;gt; {} 替代匿名类–Runnable()接口。&lt;/p&gt;
&lt;h1 id=&quot;Lambda表达式语法&quot;&gt;&lt;a href=&quot;#Lambda表达式语法&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式语法&quot;&gt;&lt;/a&gt;Lambda表达式语法&lt;/h1&gt;&lt;h2 id=&quot;函数式接口&quot;&gt;&lt;a href=&quot;#函数式接口&quot; class=&quot;headerlink&quot; title=&quot;函数式接口&quot;&gt;&lt;/a&gt;函数式接口&lt;/h2&gt;&lt;p&gt;　　Functional Interface–(函数式接口FI)，FI的定义很简单——任何接口，如果只有唯一一个抽象方法，那么这个接口就可以定义成为一个FI.例如：Runnable,Comparator接口都加上了一个@FunctionalInterface注解，编译器为了能够确保一个接口满足FI的要求，Java8提供了这个注解。&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_functionalInterface.png&quot; alt=&quot;java8 FI Define&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_functionInterface01.png&quot; alt=&quot;java8 FI Compare&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Lambda语法&quot;&gt;&lt;a href=&quot;#Lambda语法&quot; class=&quot;headerlink&quot; title=&quot;Lambda语法&quot;&gt;&lt;/a&gt;Lambda语法&lt;/h2&gt;&lt;p&gt;　　如上图所示，Lambda表达式的使用方式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.sort((word1, word2) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return Integer.compare(word1.length(), word2.length());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　如果Lambda表达式的代码块只是return后面跟一个表达式，则可以简化为：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.sort(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (word1, word2) -&amp;gt; Integer.compare(word1.length(), word2.length())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　[注意]表达式后面是没有分号,如果只有一个参数，那么包围参数的圆括号可以省略：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.forEach(temp -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　如果表达式不需要参数但也必须有圆括号，eg：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Executors.newFixedThreadExecutor().execute(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Runnable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    () -&amp;gt; &amp;#123;/* do something. */&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;方法引用&quot;&gt;&lt;a href=&quot;#方法引用&quot; class=&quot;headerlink&quot; title=&quot;方法引用&quot;&gt;&lt;/a&gt;方法引用&lt;/h2&gt;&lt;p&gt;　　Method References–(方法引用),有时候Lambda表达式只包含一个简单的方法调用，所以在这种情况下就可以将Lambda表达式简化为方法引用。方法引用包含四种方式：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_lambda_method_reference.png&quot; alt=&quot;java8 FI Define&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;静态方法&quot;&gt;&lt;a href=&quot;#静态方法&quot; class=&quot;headerlink&quot; title=&quot;静态方法&quot;&gt;&lt;/a&gt;静态方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;Integer&amp;gt; ints = Arrays.asList(1, 2, 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ints.sort(Integer::compare);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;某个特定对象的实例方法&quot;&gt;&lt;a href=&quot;#某个特定对象的实例方法&quot; class=&quot;headerlink&quot; title=&quot;某个特定对象的实例方法&quot;&gt;&lt;/a&gt;某个特定对象的实例方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;words.forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;某个类的实例方法&quot;&gt;&lt;a href=&quot;#某个类的实例方法&quot; class=&quot;headerlink&quot; title=&quot;某个类的实例方法&quot;&gt;&lt;/a&gt;某个类的实例方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;words.stream().map(word -&amp;gt; word.length()); // lambda&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;words.stream().map(String::length); // method reference&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;构造函数&quot;&gt;&lt;a href=&quot;#构造函数&quot; class=&quot;headerlink&quot; title=&quot;构造函数&quot;&gt;&lt;/a&gt;构造函数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// lambda&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;words.stream().map(word -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new StringBuilder(word);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// constructor reference&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;words.stream().map(StringBuilder::new);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Lambda表达式使用场景&quot;&gt;&lt;a href=&quot;#Lambda表达式使用场景&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式使用场景&quot;&gt;&lt;/a&gt;Lambda表达式使用场景&lt;/h1&gt;&lt;p&gt;　　任何可以接受一个FI实例的地方，都可以用Lambda表达式。比如，虽然上面给出的例子都是把Lambda表达式当作方法参数传递，但实际上我们也可以定义变量：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Runnable task = () -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // do something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Comparator&amp;lt;String&amp;gt; cmp = (s1, s2) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return Integer.compare(s1.length(), s2.length());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;预定义函数式接口&quot;&gt;&lt;a href=&quot;#预定义函数式接口&quot; class=&quot;headerlink&quot; title=&quot;预定义函数式接口&quot;&gt;&lt;/a&gt;预定义函数式接口&lt;/h2&gt;&lt;p&gt;　　Java8除了给Runnable，Comparator等接口打上了@FunctionalInterface注解之外，还预定义了一大批新的FI。这些接口都在java.util.function包里：&lt;br&gt;&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_functionInterface04.png&quot; alt=&quot;java8 FI Define&quot;&gt;&lt;br&gt;下面简单介绍其中的几个&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@FunctionalInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public interface Predicate&amp;lt;T&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean test(T t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　Predicate用来判断一个对象是否满足某种条件，比如，单词是否由六个以上字母组成：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;words.stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .filter(word -&amp;gt; word.length() &amp;gt; 6)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .count();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　Function表示接收一个参数，并产生一个结果的函数：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@FunctionalInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public interface Function&amp;lt;T, R&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    R apply(T t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　下面的例子将集合里的每一个整数都乘以2：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ints.stream().map(x -&amp;gt; x * 2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　Consumer表示对单个参数进行的操作，前面例子中的forEach()方法接收的参数就是这种操作：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@FunctionalInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public interface Consumer&amp;lt;T&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void accept(T t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;默认方法-Default-Methods&quot;&gt;&lt;a href=&quot;#默认方法-Default-Methods&quot; class=&quot;headerlink&quot; title=&quot;默认方法(Default Methods)&quot;&gt;&lt;/a&gt;默认方法(Default Methods)&lt;/h2&gt;&lt;p&gt;　　Java8对很多老的类库进行了增强，给它们配备了Lambda武器。比如前面例子中用到的forEach()方法，实际上是添加到Iterable接口中的。而多次出现的stream()方法，则是添加在了Collection接口里，为了保证API的向后兼容性，Java8对接口的语法进行了较大的调整，增加了 默认方法（Default Methods）。例如forEach()方法的实现代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface Iterable&amp;lt;T&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	default void forEach(Consumer&amp;lt;? super T&amp;gt; action) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Objects.requireNonNull(action);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (T t : this) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			action.accept(t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_default_method_01.png&quot; alt=&quot;java8 FI Compare&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_default_method_02.png&quot; alt=&quot;java8 FI Compare&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;接口的静态方法&quot;&gt;&lt;a href=&quot;#接口的静态方法&quot; class=&quot;headerlink&quot; title=&quot;接口的静态方法&quot;&gt;&lt;/a&gt;接口的静态方法&lt;/h3&gt;&lt;p&gt;　　除了抽象方法和默认方法，从Java8开始，接口也可以有静态（static）方法了。有了这个语法，我们就可以把和接口相关的帮助方法（Helper Methods）直接定义在接口里了。比如Function接口就定义了一个工厂方法indentity()：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface Function&amp;lt;T, R&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Returns a function that always returns its input argument.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param &amp;lt;T&amp;gt; the type of the input and output objects to the function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return a function that always returns its input argument&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static &amp;lt;T&amp;gt; Function&amp;lt;T, T&amp;gt; identity() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return t -&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;变量捕获&quot;&gt;&lt;a href=&quot;#变量捕获&quot; class=&quot;headerlink&quot; title=&quot;变量捕获&quot;&gt;&lt;/a&gt;变量捕获&lt;/h3&gt;&lt;p&gt;　　和内部类一样，Lambda也可以访问外部（词法作用域）变量，规则基本一样 。Java8之前， 内部类只能访问final类型的变量 ，Java8放宽了这种限制，只要变量实际上不可变（effectively final）就可以。换句话说，如果你给变量加上final关键字编译器也不报错，那么去掉final关键字后，它就是effectively final的。看下面的例子：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int tmp = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Runnable x = new Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void run() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　在Java8之前，a必须是final的才能被x看到。下面用Lambda表达式重写上面的例子：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int tmp = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Runnable x = () -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　Java8后出现了默认方法（Default Methods），如果你对抽象类比较熟悉的话，那么你可能会想java8的默认方法和抽象类有点像，但是这两者之间还是有些联系和区别的，请看下图：&lt;br&gt;&lt;img src=&quot;/uploads/blog/Jdk/java8/java8_default_method_03.png&quot; alt=&quot;java8 FI Compare&quot;&gt;&lt;/p&gt;
&lt;p&gt;#结束语&lt;br&gt;　　Java8的Lambda才真正让Java朝着函数式编程迈进了一大步。&lt;/p&gt;
&lt;p&gt;　　&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作为一名Java程序员，想想Jdk 9都快要出来了，必须要马上学习一下Jdk 8中的一些新特性了，早就听说了Java8中的Lambda表达式非常强大，一直都处于懒散状态，真的需要开始充充新知识了！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Lambda" scheme="http://www.jiang-yu.cn/categories/Lambda/"/>
    
    
      <category term="Lambda" scheme="http://www.jiang-yu.cn/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ启动报错--ISC服务惹的祸</title>
    <link href="http://www.jiang-yu.cn/2016/11/09/ActiveMQ/ActiveMQ-ICS_Service/"/>
    <id>http://www.jiang-yu.cn/2016/11/09/ActiveMQ/ActiveMQ-ICS_Service/</id>
    <published>2016-11-09T00:43:51.000Z</published>
    <updated>2016-11-09T01:04:17.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  本文主要记录一下在windows上使用ActiveMQ过程中出现的一个错误，而且出现过两次，方便后期备忘和快速查询。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;　　最近做项目中遇到了要使用异步的方式去实现某些业务场景，所以就选择了ActiveMQ+Camel来实现，开始的时候可以正常使用，但是在使用一段时间后，在windows上偶尔会出现启动的时候报错，开始一直都以为是端口冲突导致的问题，但是改过很多端口号后还是不行，最后还是依赖强大的Google找到了答案，所以记录一下解决方法。&lt;/p&gt;
&lt;h2 id=&quot;第一步：问题复现&quot;&gt;&lt;a href=&quot;#第一步：问题复现&quot; class=&quot;headerlink&quot; title=&quot;第一步：问题复现&quot;&gt;&lt;/a&gt;第一步：问题复现&lt;/h2&gt;&lt;p&gt;　　在windows上点击ActiveMQ中bin目录下：bin/win64/activemq.bat 启动MQ服务，出现如下报错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to bind to server socket:tcp://0.0.0.0:61626 due to: java.net.BindException: Address already in use: JVM_Bind&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　如下图所示&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/ActiveMQ/activeMQ_error_msg.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步：问题排查&quot;&gt;&lt;a href=&quot;#第二步：问题排查&quot; class=&quot;headerlink&quot; title=&quot;第二步：问题排查&quot;&gt;&lt;/a&gt;第二步：问题排查&lt;/h2&gt;&lt;p&gt;　　初步判断是：端口号被占用了，所以先查看一下端口“61626” 被哪个服务给占用了，然后直接kill掉那个进程，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/ActiveMQ/error_problem_check_01.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　然而，结果让我们很失望，nothing,没有任何进程占用该端口号，所以我想既然61626端口被占用了，那我就再换一个端口号，但是还是不行，还是报同样的错误。
　　&lt;/p&gt;
&lt;h2 id=&quot;第三步：&quot;&gt;&lt;a href=&quot;#第三步：&quot; class=&quot;headerlink&quot; title=&quot;第三步：&quot;&gt;&lt;/a&gt;第三步：&lt;/h2&gt;&lt;p&gt;　　通过netstat -aon | findstr “61616” 查找端口被谁占用了，可是一直没有找到，最后只能去Google大法那里去寻求帮助了，Google说是 Internet Connection Sharing (ICS)服务占用，kill了这个服务，启动就Ok了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微软官方服务解释：&lt;br&gt;　　BITS can force a dial-up connection for home networks that use Microsoft Internet Connection Sharing if Connection Sharing is configured to dial out when computers on the network access the Internet. To prevent a forced dial-up connection, disable the Establish a dial-up connection whenever a computer on my network attempts to access the Internet option on the Connection Sharing host computer that shares its Internet connection.&lt;br&gt;　　Computers connected to the Connection Sharing host computer assume they have a network connection, so BITS will try to transfer files. If the dial-up option is disabled on the host computer and the host computer does not have an active connection, the transfers will fail with a transient error. BITS will retry the transfers periodically.
　　&lt;/p&gt;
&lt;h2 id=&quot;第四步：问题解决&quot;&gt;&lt;a href=&quot;#第四步：问题解决&quot; class=&quot;headerlink&quot; title=&quot;第四步：问题解决&quot;&gt;&lt;/a&gt;第四步：问题解决&lt;/h2&gt;&lt;p&gt;　　Google后，立即打开windows的任务管理器，找到了相应的“嫌疑人”进程，直接kill掉&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/ActiveMQ/kill_ICS_Service.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　果然，kill掉ICS那个服务之后，ActiveMQ又可以正常启动了。
　　&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;　　每天记录平时工作中遇到的问题，一点一点积累，加油，Fighting !!!&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  本文主要记录一下在windows上使用ActiveMQ过程中出现的一个错误，而且出现过两次，方便后期备忘和快速查询。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ActiveMQ" scheme="http://www.jiang-yu.cn/categories/ActiveMQ/"/>
    
    
      <category term="ActiveMQ" scheme="http://www.jiang-yu.cn/tags/ActiveMQ/"/>
    
  </entry>
  
  <entry>
    <title>SVN入门教程（三）--上传文件到SVN服务器</title>
    <link href="http://www.jiang-yu.cn/2016/09/02/SVN/SVN%20Learn%20Basic%2003/"/>
    <id>http://www.jiang-yu.cn/2016/09/02/SVN/SVN Learn Basic 03/</id>
    <published>2016-09-02T04:43:51.000Z</published>
    <updated>2016-09-02T05:49:26.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  本文主要介绍如何在自己的电脑上用SVN客户端上传文件到SVN服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;　　通过前面的&lt;a href=&quot;http://www.jiang-yu.cn/2016/09/01/SVN/SVN%20Learn%20Basic02/&quot;&gt;SVN入门教程（二）–下载文件到本地计算机&lt;/a&gt;,我们可以知道如何从SVN上下载文件了，是不是很鸡冻呢，哈哈，但是可能突然有一天，你的领导叫你写一个公司的新员工入职流程指导的文档并且需要上传到SVN服务器，因为这个文档要给到你们公司的研发部的新入职的员工小江以及以后新入职的员工，所以你需要将文档保存到公司一个公共的存放文档的地方——SVN文件服务器（就是一个统一管理公司的各个部门的相关文档），本篇博文就是指导你如何将一个新建的文件上传到SVN服务器。&lt;/p&gt;
&lt;h2 id=&quot;第一步：确定你需要上传文件到服务器中的位置&quot;&gt;&lt;a href=&quot;#第一步：确定你需要上传文件到服务器中的位置&quot; class=&quot;headerlink&quot; title=&quot;第一步：确定你需要上传文件到服务器中的位置&quot;&gt;&lt;/a&gt;第一步：确定你需要上传文件到服务器中的位置&lt;/h2&gt;&lt;p&gt;　　所谓的“文件服务器中的位置”可以理解为百度云盘中的一个目录，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0020.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　理解了上面的概念之后，确定了要存放文件的目录，比如：(&lt;a href=&quot;https://www.jiang-yu.cn/svn/document/新员工天地),下面我们就开始第二步了。&quot;&gt;https://www.jiang-yu.cn/svn/document/新员工天地),下面我们就开始第二步了。&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步：添加文件操作&quot;&gt;&lt;a href=&quot;#第二步：添加文件操作&quot; class=&quot;headerlink&quot; title=&quot;第二步：添加文件操作&quot;&gt;&lt;/a&gt;第二步：添加文件操作&lt;/h2&gt;&lt;p&gt;　　首先，有了第一步中的链接，比如：【&lt;a href=&quot;https://www.jiang-yu.cn/svn/document/新员工天地】&quot;&gt;https://www.jiang-yu.cn/svn/document/新员工天地】&lt;/a&gt; 这个目录之后，你需要按照教程二中的步骤，将该文件夹下的文件先下载到本地目录中，比如：HR_DOCUMENT目录下，然后将自己编辑好了文件复制到该目录下（或者直接在这个目录下创建一个新的文件，编辑好之后保存），这里以：aaa.doc文件为例，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0021.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　然后，执行SVN的添加操作，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0022.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　最后，执行添加操作完成之后，我们可以查看文件的变化，会在文件上出现一个蓝色的加号，&lt;br&gt;　　【文件的变化】如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0023.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　【文件夹的变化–如果有修改（就是和服务器上的文件有不一样，比如：修改、新增）和 服务器上的文件不一致】如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0024.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第三步：提交文件菜单操作&quot;&gt;&lt;a href=&quot;#第三步：提交文件菜单操作&quot; class=&quot;headerlink&quot; title=&quot;第三步：提交文件菜单操作&quot;&gt;&lt;/a&gt;第三步：提交文件菜单操作&lt;/h2&gt;&lt;p&gt;　　上面两步正确操作之后，在文件上右键点击出现菜单中选择SVN Commit，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0025.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第四步：填写提交备注信息&quot;&gt;&lt;a href=&quot;#第四步：填写提交备注信息&quot; class=&quot;headerlink&quot; title=&quot;第四步：填写提交备注信息&quot;&gt;&lt;/a&gt;第四步：填写提交备注信息&lt;/h2&gt;&lt;p&gt;　　最后，出现一个填写备注的弹出框，这里需要说明一下，就是每次提交文件（也就是对文件有修改操作，新增操作，删除操作的话都需要填写操作的原因和影响的文件）都要填写操作备注，养成这样的好习惯，对后面操作是有帮助的，如下图所示，可以按照给出的模板操作：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【提 交 人】：江xx&lt;br&gt;【文件说明】：新增了新员工入职指导文件&lt;br&gt;【修改说明】：&lt;br&gt;　　1.修改了xxx文件&lt;br&gt;　　2.删除了xxx文件&lt;br&gt;【影响范围】：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0026.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;　　通过上面的四步操作，基本上可以掌握了如何将自己写好的文档资源提交到SVN服务器了，然后你就可以将链接地址：&lt;a href=&quot;https://www.jiang-yu.cn/svn/document/aaa.doc&quot;&gt;https://www.jiang-yu.cn/svn/document/aaa.doc&lt;/a&gt; 发给新入职的员工小江了，哈哈，是不是很简单啊，如果想更深层次的了解SVN的使用，请继续关注哦，后面会给出SVN编辑文件后提交的教程。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  本文主要介绍如何在自己的电脑上用SVN客户端上传文件到SVN服务器。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/categories/SVN/"/>
    
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>SVN入门教程（二）--下载文件到本地计算机</title>
    <link href="http://www.jiang-yu.cn/2016/09/01/SVN/SVN%20Learn%20Basic02/"/>
    <id>http://www.jiang-yu.cn/2016/09/01/SVN/SVN Learn Basic02/</id>
    <published>2016-09-01T14:47:51.000Z</published>
    <updated>2016-09-02T05:01:01.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  本文主要介绍利用SVN客户端从服务器上下载文件到本地计算机。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　在看此教程之前，请先安装好SVN客户端到自己的电脑上，否则请移步&lt;a href=&quot;http://www.jiang-yu.cn/2016/09/01/SVN/SVN%20Learn%20Basic%2001/&quot;&gt;SVN入门教程（一）–软件的安装&lt;/a&gt;。在安装好了SVN客户端后，下面我们就开始SVN的使用之旅吧！Come on…这次讲解的是如何从SVN服务器上下载我们需要的文件资源。&lt;/p&gt;
&lt;h2 id=&quot;第一步：创建文件夹&quot;&gt;&lt;a href=&quot;#第一步：创建文件夹&quot; class=&quot;headerlink&quot; title=&quot;第一步：创建文件夹&quot;&gt;&lt;/a&gt;第一步：创建文件夹&lt;/h2&gt;&lt;p&gt;　　首先，我们要在自己的电脑上创建一个文件夹（任意位置，任意名称），用来存放从SVN服务器中下载的文件，例如：我需要下载公司的人资部的一些文档资源，第一步，创建一个文件夹（HR_DOCUMENT）&lt;br&gt;下面的教程使用的是A_SVN_DEMO这个文件名，如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0011.png&quot; alt=&quot;create_des_folder&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步：检出资源文件，填写链接地址&quot;&gt;&lt;a href=&quot;#第二步：检出资源文件，填写链接地址&quot; class=&quot;headerlink&quot; title=&quot;第二步：检出资源文件，填写链接地址&quot;&gt;&lt;/a&gt;第二步：检出资源文件，填写链接地址&lt;/h2&gt;&lt;p&gt;　　文件夹创建好之后，在文件夹上右键–&amp;gt;SVN Checkout–&amp;gt;出现如下的弹出框，这个弹出框需要填写一个链接地址(一般情况下，如果你是下载文件的话，你的领导或者同事都会给你一个链接的地址，例如：&lt;a href=&quot;https://www.jiang-yu.cn/svn/document),如图所示，将https://www.jiang-yu.cn/svn/document（这里你需要替换成别人给你的链接地址）&quot;&gt;https://www.jiang-yu.cn/svn/document),如图所示，将https://www.jiang-yu.cn/svn/document（这里你需要替换成别人给你的链接地址）&lt;/a&gt; 填写到URL of repository下的输入框中，然后点击ok即可&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0012.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第三步：等待文件资源下载，查看下载的进度和情况&quot;&gt;&lt;a href=&quot;#第三步：等待文件资源下载，查看下载的进度和情况&quot; class=&quot;headerlink&quot; title=&quot;第三步：等待文件资源下载，查看下载的进度和情况&quot;&gt;&lt;/a&gt;第三步：等待文件资源下载，查看下载的进度和情况&lt;/h2&gt;&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0013.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第四步：查看文件是否下载下来了&quot;&gt;&lt;a href=&quot;#第四步：查看文件是否下载下来了&quot; class=&quot;headerlink&quot; title=&quot;第四步：查看文件是否下载下来了&quot;&gt;&lt;/a&gt;第四步：查看文件是否下载下来了&lt;/h2&gt;&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/SVN/svn_0014.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;
　　&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;　　哎呀，一不小心，本文就结束了，是不是很简单呢，只需要简单的四步就可以从SVN服务器中，获取你所需要的文件，这里很多的操作都直接在截图中有备注（比较懒–不想打字，哈哈），好了，透露一下，本教程会有连载哦，下一篇会写一下如何在本地计算机上传文件到服务器上，如果想掌握SVN的基本使用，请多多关注哈&lt;del&gt;~&lt;/del&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  本文主要介绍利用SVN客户端从服务器上下载文件到本地计算机。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/categories/SVN/"/>
    
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>SVN入门教程（一）--软件的安装</title>
    <link href="http://www.jiang-yu.cn/2016/09/01/SVN/SVN%20Learn%20Basic%2001/"/>
    <id>http://www.jiang-yu.cn/2016/09/01/SVN/SVN Learn Basic 01/</id>
    <published>2016-09-01T14:43:51.000Z</published>
    <updated>2016-09-02T00:40:49.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  本文主要介绍SVN以及如何安装SVN软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　博主有点懒哦，还没有开始写这篇文章，后续补上。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  本文主要介绍SVN以及如何安装SVN软件。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/categories/SVN/"/>
    
    
      <category term="SVN" scheme="http://www.jiang-yu.cn/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>Java入门--IDE工具的选择（二）</title>
    <link href="http://www.jiang-yu.cn/2016/08/09/JAVA_BASIC/JAVA_BASIC_DAY02/"/>
    <id>http://www.jiang-yu.cn/2016/08/09/JAVA_BASIC/JAVA_BASIC_DAY02/</id>
    <published>2016-08-09T12:47:51.000Z</published>
    <updated>2016-08-09T01:31:47.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  温故知新：Java入门级系列之IDE的选择，选择一个好的工具往往可以达到事半功倍效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　作为一个即将入门的java程序猿，你肯定听说过Eclipse吧！如果不知道也没有关系，可以理解，因为你马上就要去认识一下它了,它的魅力接触久了就自然发现了，恩恩，请不要随便就爱上了它哦。&lt;br&gt;　　首先，下载Eclipse,Here &lt;a href=&quot;http://www.eclipse.org/downloads/&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Me To DownLoad Page&lt;/a&gt;&lt;br&gt;　　下载下来后（貌似最新的版本是提供一个exe文件来安装Eclipse,而且必须支持jdk1.8以上，所以暂时不用），Eclipse是不需要安装的（可以向任何一个Java研发狗索要一个），直接解压就可以使用，是不是现在感觉——wow,这么简单，是的，就是这么简单。解压之后目录结构如下图：&lt;br&gt;　　&lt;strong&gt;New Version Eclipse Install Interface(jdk 1.8 + )&lt;/strong&gt;:&lt;br&gt;　　step01、&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_install_interface.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　step02、&lt;img src=&quot;/uploads/blog/javabasic/lesson2/install_02.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;strong&gt;Customer Version Eclipse Directroy(jdk 1.7 or lower)&lt;/strong&gt;:&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/install_01.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　点击eclipse就可以开始撸代码之旅了，开始界面：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/start_intf.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　哈哈，是不是有点激动了呢，仔细等待一下吧，然后会出现一个提示框，要求选择一个工作空间（workspace）,如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/switch_workspace.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Tips]所谓的工作空间，就是coding之后的代码存放的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　好的，上面的步骤顺利完成之后，就看到了长得一般般的软件界面了，不要对他失去信心，它是个很强大的东西，下面开始慢慢介绍一下Eclipse基本的操作&lt;br&gt;　　step one: 新建一个工程&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_project_001.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_project_002.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_project_003.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　step two:新建包名（命名规则：公司域名反着写，然后跟上项目名称）&lt;br&gt;　　比如：公司——www.jiangyu.com  项目名称：enbrands&lt;br&gt;　　    包名：com.jiangyu.enbrands&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_project_004.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/package_001.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/package_002.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　新建完成之后，工程目录结构如下：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/package_003.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　step three: 新建一个类（Java中所有的文件都是一个类或者一个文件中包含多个类）&lt;br&gt;　　[Tips]如果不知道类，是怎么一回事的话，就简单理解：类就是对一类东西的抽象。&lt;br&gt;　　新建一个类：右键包名–New–Class&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_class_001.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_class_002.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_class_003.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　到此，一个类已经创建完成了，下面就开始一个简单的代码，即：入门级的Hello World&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_class_004.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　编写代码，输出“Hello World”&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/new_class_005.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　最后，简单的一行代码就撸完了，下面开始运行一下吧，是不是有点小鸡冻啊，哈哈&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/debug_class_001.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/lesson2/debug_class_002.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　小伙伴，是否看到了“Hello World” 呢！好的，今天的入门级别——IDE的选择就结束了，期待下一篇博客吧！&lt;br&gt;　　如果对Java是一片空白的话，建议先熟悉一下Java的基本语法和类的概念，Finghting……
　　
　　
　　
　　&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  温故知新：Java入门级系列之IDE的选择，选择一个好的工具往往可以达到事半功倍效果。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="http://www.jiang-yu.cn/categories/JAVA/"/>
    
    
      <category term="Java" scheme="http://www.jiang-yu.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置代理--搭建线上和开发环境</title>
    <link href="http://www.jiang-yu.cn/2016/08/09/Ngnix/nginx_server_config/"/>
    <id>http://www.jiang-yu.cn/2016/08/09/Ngnix/nginx_server_config/</id>
    <published>2016-08-09T12:47:51.000Z</published>
    <updated>2016-08-09T10:28:41.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;使用nginx配置反向代理，80端口映射不同的内网web服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　上次写过一篇博文是关于使用&lt;a href=&quot;http://www.jiang-yu.cn/2016/03/06/Ngnix/Tomcat%20+%20Ngnix%20+%20Memcached%20%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%20Session%E5%85%B1%E4%BA%AB/&quot;&gt;Nginx+Tomcat实现负载均衡&lt;/a&gt;,这里面有介绍怎么用源码安装nginx，这里就不在重复了，今天我们要实现的是同一个端口号（80）映射到服务器上的不同Tomcat中，实现开发环境和线上环境的分离，当然了，如果你们公司不缺money,可以另外开一台Server.&lt;br&gt;　　首先，查看一下nginx是否安装好了：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Ngnix/check_nginx_is_install.png&quot; alt=&quot;nginx_install_check&quot;&gt;&lt;br&gt;　　从上面可以看出来，nginx已经安装好了，而且还有版本信息，然后我们进入到nginx的安装目录，修改nginx的配置文件：nginx.conf&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Ngnix/ngnix_location.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启压缩配置&lt;br&gt;&lt;img src=&quot;/uploads/blog/Ngnix/nginx_gzip_on.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;br&gt;如果不配置压缩的资源类型，貌似对前端资源的压缩没有起到效果，所以配置的时候需要注意一下：记得配置要压缩文件的类型。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置Server节点&lt;br&gt; 在上一篇博文中，我们只配置了一个Server节点来实现负载均衡，但实际情况可能不是这样的。最近在做一个项目，因为项目中需要用到facebook的api调用，所以公司就购买了一台能够google的服务器，由于服务器是阿里的只对外开放一个80端口，所以我们要实现开发和线上环境分开的话，必须要配置代理来实现跳转——也就是使用nginx(也可以使用Apache来实现–后期来介绍Apache的使用)&lt;br&gt;&lt;strong&gt;线上环境的配置&lt;/strong&gt;：&lt;br&gt; 默认使用80端口号，该服务器也分配了一个线上的域名xxx.xx.com,所以线上环境的配置非常简单，直接使用默认的配置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream myClusterServer&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              server 127.0.0.1:8081 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              #server 127.0.0.1:8082 weight=5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              #server 127.0.0.1:8083 weight=5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen       80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server_name  localhost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        charset utf-8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location  / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                index  index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                proxy_pass http://myClusterServer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		proxy_connect_timeout 500s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		proxy_read_timeout 500s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		proxy_send_timeout 500s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                proxy_redirect default;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #proxy_connect_timeout 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;img src=&quot;/uploads/blog/Ngnix/default_80_server.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;br&gt; &lt;strong&gt;开发环境配置：&lt;/strong&gt;&lt;br&gt; 由于开发环境没有分配域名，所以我们可以通过修改hosts文件来实现映射(修改/etc/hosts  127.0.0.1 test.com  然后访问的机器也将服务器的ip地址映射为test.com)，基本配置如下：&lt;br&gt; &lt;strong&gt;nginx.conf&lt;/strong&gt;: &lt;img src=&quot;/uploads/blog/Ngnix/dev_80_server.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;br&gt; &lt;strong&gt;/etc/hosts&lt;/strong&gt;: &lt;img src=&quot;/uploads/blog/Ngnix/test_com.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen       80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server_name  test.com;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    charset utf-8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #access_log  logs/host.access.log  main;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location  / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	index  index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy_pass http://127.0.0.1:8082;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy_set_header           Host $host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy_set_header  X-Real-IP  $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	proxy_redirect default;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy_connect_timeout 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_page   500 502 503 504  /50x.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location = /50x.html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置错误页面处理&lt;br&gt; &lt;img src=&quot;/uploads/blog/Ngnix/nginx_default_error_config.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置超时时间&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keepalive_timeout  200s;&lt;br&gt; fastcgi_connect_timeout 300s;&lt;br&gt; fastcgi_send_timeout 300s;&lt;br&gt; fastcgi_read_timeout 300s;&lt;br&gt; fastcgi_buffer_size 128k;&lt;br&gt; fastcgi_buffers 8 128k;&lt;br&gt; fastcgi_busy_buffers_size 256k;&lt;br&gt; fastcgi_temp_file_write_size 256k; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　&lt;img src=&quot;/uploads/blog/Ngnix/nginx_connect_timeout.png&quot; alt=&quot;nginx_install_dir&quot;&gt;&lt;/p&gt;
&lt;p&gt;　　到此，nginx的基本配置也就完成了.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用nginx配置反向代理，80端口映射不同的内网web服务器。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.jiang-yu.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.jiang-yu.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat开启压缩功能</title>
    <link href="http://www.jiang-yu.cn/2016/08/09/Tomcat/Tomcat_Gzip_On/"/>
    <id>http://www.jiang-yu.cn/2016/08/09/Tomcat/Tomcat_Gzip_On/</id>
    <published>2016-08-09T12:47:51.000Z</published>
    <updated>2016-08-09T04:07:49.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;为了减小前端页面加载静态资源的时间，通常实际项目中都需要给Tomcat开启压缩功能！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　首先，找到tomcat的目录conf,打开server.xml文件，修改Connector节点，默认配置如下：&lt;br&gt;　　　　　　&lt;img src=&quot;/uploads/blog/Tomcat/tomcat_gzip_close.png&quot; alt=&quot;default_tomcat_connector_config&quot;&gt;&lt;br&gt;　　修改配置文件中的connector节点内容如下图：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Tomcat/tomcat_gzip_on.png&quot; alt=&quot;default_tomcat_connector_config&quot;&gt;&lt;br&gt;　　&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;port=&quot;8082&quot; protocol=&quot;HTTP/1.1&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;　　　　connectionTimeout=&amp;quot;20000&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　redirectPort=&amp;quot;8443&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　compression=&amp;quot;on&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　compressionMinSize=&amp;quot;2048&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　noCompressionUserAgents=&amp;quot;gozilla,traviata&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　compressableMimeType=&amp;quot;text/html,text/xml,text/javascript,application/x-javascript,application/javascript,text/css,text/plain&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;br&gt;　　然后，重启tomcat服务器，浏览器F12打开，访问一个静态文件，查看响应头：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Tomcat/tomcat_gzip_on_browser.png&quot; alt=&quot;default_tomcat_connector_config&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;小伙伴也许会感觉到奇怪，为啥这里服务器是Nginx，哈哈，这是因为我配置了代理，更多nginx配置信息请后续关注博主吧 ！
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;为了减小前端页面加载静态资源的时间，通常实际项目中都需要给Tomcat开启压缩功能！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tomcat" scheme="http://www.jiang-yu.cn/categories/Tomcat/"/>
    
    
      <category term="Tomcat" scheme="http://www.jiang-yu.cn/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat内存配置以及项目发布配置</title>
    <link href="http://www.jiang-yu.cn/2016/08/09/Tomcat/Tomcat_Mem_Virt_Config/"/>
    <id>http://www.jiang-yu.cn/2016/08/09/Tomcat/Tomcat_Mem_Virt_Config/</id>
    <published>2016-08-09T04:47:51.000Z</published>
    <updated>2016-08-09T03:57:38.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt; 作为Java程序猿，我们不得不掌握Tomcat的基本配置，本文将简单讲述一下实际项目中tomcat的一般配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;　　作为Java开发中的一员，每天和打交道的服务器最频繁的必然是Tomcat了，貌似有一种“Tomcat坑我千百遍，我待Tomcat如初恋”的情愫哈，废话不多说了，下面首先介绍一下最常用的配置吧！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置Tomcat内存&lt;br&gt;每次发布项目之后，热部署的时候是否都会出现 memery leak 的提示日志，或者惨一点的，服务器直接崩了，这个&lt;br&gt;问题出现的频率一般都比较高，那么怎么摆脱这个错误的困扰呢？很简单，只需要简单的一个配置就可以搞定：&lt;br&gt;打开tomcat的位置，找到tomcat目录下的bin目录&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Tomcat/vim_catalina.sh.png&quot; alt=&quot;ls_file&quot;&gt;&lt;br&gt;然后打开catalina.sh,在文件的顶部加上如下配置（具体参数需要根据实际服务器的配置而定）&lt;br&gt;　&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;-XX:MaxPermSize=256m -Xms1024m -Xmx1024m -Dfile.encoding=UTF8 -Dsun.jnu.encoding=UTF8&quot; ```&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;　![memory_config](/uploads/blog/Tomcat/tomcat_memory_config.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后保存文件，就可以了！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; - 配置Tomcat虚拟目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 项目上线之后，一般访问链接中一般是不会带项目名称的，那该怎么办了，首先你可能想到的是使用Apache或者是Nginx配置代理来实现，但是在实际开发中，我们就没有必要这样搞了，这里有一种简单的方式：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打开tomcat目录下的conf目录，修改server.xml文件，在Host节点中添加一行配置：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　```&amp;lt;Context docBase=&amp;quot;projectName&amp;quot; path=&amp;quot;/&amp;quot; reloadable=&amp;quot;true&amp;quot; crossContext=&amp;quot;true&amp;quot; sessionCookieName=&amp;quot;projectName&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下图所示：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/Tomcat/virtual_directory.png&quot; alt=&quot;memory_config&quot;&gt;&lt;/p&gt;
&lt;p&gt;　　好了，tomcat的基本配置，注意的是，第二条配置，一般在上传war包之后，启动tomcat就会自动解压出来，而且会出现一个ROOT文件夹，此时我们要停掉服务器，然后删除ROOT文件夹，重启服务器就可以了！&lt;strong&gt;记住哦，这一步非常重要&lt;/strong&gt;！后续会继续更新Tomcat的高级配置！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 作为Java程序猿，我们不得不掌握Tomcat的基本配置，本文将简单讲述一下实际项目中tomcat的一般配置。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tomcat" scheme="http://www.jiang-yu.cn/categories/Tomcat/"/>
    
    
      <category term="Tomcat" scheme="http://www.jiang-yu.cn/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Java入门--环境的准备（一）</title>
    <link href="http://www.jiang-yu.cn/2016/08/08/JAVA_BASIC/JAVA_BASIC_DAY01/"/>
    <id>http://www.jiang-yu.cn/2016/08/08/JAVA_BASIC/JAVA_BASIC_DAY01/</id>
    <published>2016-08-08T12:47:51.000Z</published>
    <updated>2016-08-08T14:02:05.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;  温故知新：Java入门级系列之环境的搭建，找回入门时的感觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;第一步：下载JDK&lt;br&gt;　　This is &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html#jdk-7u80-oth-JPR&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JDK7 DOWNLOAD LINK CLICK ME&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;第二步：安装jdk&lt;br&gt;　　双击下载好的jdk文件，傻瓜式的安装下去，下一步，下一步，最终安装完成&lt;br&gt;　　最终安装目录：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/jdk_location.png&quot; alt=&quot;JDK_LOCATION&quot;&gt;&lt;br&gt;　　路径说明&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/java_home_path.png&quot; alt=&quot;JDK_LOCATION&quot;&gt;&lt;br&gt;第三步：配置环境变量&lt;br&gt;　　步骤：桌面右键我的电脑–&amp;gt;属性–&amp;gt;高级系统变量–&amp;gt;环境变量–&amp;gt;设置JAVA_HOME–&amp;gt;设置PATH环境变量&lt;br&gt;　　１、&lt;img src=&quot;/uploads/blog/javabasic/config_path_step01.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　２、&lt;img src=&quot;/uploads/blog/javabasic/config_path_step02.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　３、&lt;img src=&quot;/uploads/blog/javabasic/config_path_step03.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　４、&lt;img src=&quot;/uploads/blog/javabasic/config_path_step04.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　５、&lt;img src=&quot;/uploads/blog/javabasic/config_path_step05.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;p&gt;第四步：验证java环境是否安装成功&lt;br&gt;　　好的，经过了前面的三步，我们的环境变量就配置完成了，现在我们来检验一下我们是否配置成功好了&lt;br&gt;　　首先，win+R 输入cmd&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/win_R.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;br&gt;　　然后，在cmd命令行中输入java-version，如下图&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/javabasic/jdk_varify_demo.png&quot; alt=&quot;JDK_CONFG_CHECK&quot;&gt;&lt;/p&gt;
&lt;p&gt;　　哈哈，简单吧!好的，安装好Jdk环境后，说明你向成功迈进了一小步，是不是有点小激动呢，嘻嘻，休息一下吧，下一篇将开始撸代码了哈,你准备好了么！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  温故知新：Java入门级系列之环境的搭建，找回入门时的感觉。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="http://www.jiang-yu.cn/categories/JAVA/"/>
    
    
      <category term="Java" scheme="http://www.jiang-yu.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySql修改默认的字符集</title>
    <link href="http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%9A%84%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL修改默认的字符编码/</id>
    <published>2016-06-26T08:28:51.000Z</published>
    <updated>2016-06-26T08:44:54.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Linux安装完MySql后，如果没有配置字符编码的话,默认的是latin1,而开发环境一般都是使用utf-8，所有如果不修改的话会出现乱码问题.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　由于linux下MySQL的默认安装目录分布在不同的文件下；不像windows一样放在同一目录下，只需修改其中的my.ini文件，重起后就生效了；所以先来看看linux下MySQL的数据库文件、配置文件和命令文件分别在不同的目录。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改之前的编码方式：&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_16.png&quot; alt=&quot;my.cnf&quot;&gt;&lt;br&gt;　　如果在客户端使用&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;character_set_system=utf8```,只能是一种指标不治本的方法，如下图&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;　　![my.cnf](/uploads/blog/MySQL/mysql_security/security_17.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 查找linux下MySql的主配置文件：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　首先我们使用find命令查找一下mysql的配置文件位置：```find / -iname &amp;apos;*.cnf&amp;apos; -print```，如下图所示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　![my.cnf](/uploads/blog/MySQL/mysql_security/security_18.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　然后修改配置文件中的编码方式：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ```vim /etc/my.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　修改default_character_set=utf-8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改之后&lt;br&gt;　　&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_19.png&quot; alt=&quot;my.cnf&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Linux安装完MySql后，如果没有配置字符编码的话,默认的是latin1,而开发环境一般都是使用utf-8，所有如果不修改的话会出现乱码问题.&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改IP配置</title>
    <link href="http://www.jiang-yu.cn/2016/06/26/Linux/Linux%E4%BF%AE%E6%94%B9IP%E5%9C%B0%E5%9D%80%E4%B8%BA%E9%9D%99%E6%80%81%E5%9C%B0%E5%9D%80/"/>
    <id>http://www.jiang-yu.cn/2016/06/26/Linux/Linux修改IP地址为静态地址/</id>
    <published>2016-06-26T06:58:51.000Z</published>
    <updated>2016-06-26T06:05:03.000Z</updated>
    
    <content type="html">&lt;p&gt;　　每天学一点Linux命令–修改Linux系统的ip地址&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;/etc/sysconfig/network-scripts/ifcfg-eth0``` &lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;DEVICE=eth0 　　　　　网卡对应的设备别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYPE=Ethernet　　　　　网络类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BOOTPROTO=static　　　网卡获得ip地址的方式（默认是dhcp）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS1=192.168.1.1 　　　　　DNS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPV6INIT=no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USERCTL=no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPADDR=192.168.1.132    　　　　ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NETMASK=255.255.255.0 　　　子网掩码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GATEWAY=192.168.1.1 　　　　　　网关&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HWADDR=XX:XX:XX:XX:XX　　　　MAC地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ONBOOT=yes　系统启动时是否设置此网络接口，默认设置为yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改完成之后，重启network服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```service network restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ok，使用 &lt;code&gt;ifconfig eth0&lt;/code&gt; 查看一下是否生效&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　每天学一点Linux命令–修改Linux系统的ip地址&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MySql授权</title>
    <link href="http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL%E6%8E%88%E6%9D%83%E7%AE%80%E4%BB%8B/"/>
    <id>http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL授权简介/</id>
    <published>2016-06-26T06:47:51.000Z</published>
    <updated>2016-06-26T09:14:45.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Linux安装完MySql后，一般root用户是不配置给远程机器访问的，所以要重新创建一个和root权限相当的用户来管理.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建数据库&lt;br&gt; mysql&amp;gt;create database jhonyu01DB;&lt;br&gt; &lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_01.png&quot; alt=&quot;创建数据库&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;授权操作&quot;&gt;&lt;a href=&quot;#授权操作&quot; class=&quot;headerlink&quot; title=&quot;授权操作&quot;&gt;&lt;/a&gt;授权操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建用户（jhonyu01|jhonyuread）&lt;ul&gt;
&lt;li&gt;用户jhonyu01授权localhost可以访问&lt;br&gt;mysql&amp;gt;grant all privileges on jhonyu01DB.* to jhonyu01@localhost identifiedby ‘jhonyu01’ WITH GRANT OPTION;&lt;br&gt;mysql&amp;gt;flush privileges;&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_02.png&quot; alt=&quot;jhonyu01&quot;&gt;&lt;/li&gt;
&lt;li&gt;用户jhonyuread没有进行任何授权&lt;br&gt;mysql&amp;gt;insert into mysql.user(Host,User,Password) values(‘localhost’,’jhonyuread’,password(‘jhonyuread’));&lt;br&gt;mysql&amp;gt;flush privileges;&lt;br&gt;mysql&amp;gt;exit&lt;br&gt;[root@localhost ~]# mysql -ujhonyuread -p&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_03.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;授权用户jhonyu01所有ip可以访问&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_04.png&quot; alt=&quot;jhonyu01&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;客户端测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用jhonyu01登录&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_05.png&quot; alt=&quot;jhonyu01&quot;&gt;&lt;/li&gt;
&lt;li&gt;使用jhonyuread登录&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_06.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;jhonyuread授予权限之后&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_07.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_08.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_09.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;查看自己授权&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_10.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_11.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_12.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;/li&gt;
&lt;li&gt;创建topic表&lt;br&gt; （略）&lt;/li&gt;
&lt;li&gt;查询表结构&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_13.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;/li&gt;
&lt;li&gt;两个不同的用户操作数据库&lt;br&gt;&lt;img src=&quot;/uploads/blog/MySQL/mysql_security/security_14.png&quot; alt=&quot;jhonyuread&quot;&gt;&lt;h3 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h3&gt; MySql的用户操作权限简单的介绍了下，有写描述不清楚的地方，希望大家多多指正，文中大部分都是用图片里代替，图片操作清晰而且直接明了，fighting…&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Linux安装完MySql后，一般root用户是不配置给远程机器访问的，所以要重新创建一个和root权限相当的用户来管理.&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySql连接阻塞解决办法</title>
    <link href="http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL%E8%BF%9E%E6%8E%A5%E9%98%BB%E5%A1%9E%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jiang-yu.cn/2016/06/26/MySQL/MySQL连接阻塞解决办法/</id>
    <published>2016-06-26T06:07:51.000Z</published>
    <updated>2016-06-26T09:08:24.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Error Message:message from server: “Host ‘x.x.x.x’ is blocked because of many connection errors; unblock with ‘mysqladmin flush-hosts’”&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;场景：&quot;&gt;&lt;a href=&quot;#场景：&quot; class=&quot;headerlink&quot; title=&quot;场景：&quot;&gt;&lt;/a&gt;场景：&lt;/h3&gt;&lt;p&gt;　　前段时间公司开发环境出现服务器上部署的项目启动的时候出现上述错误提示，从上面的错误原因可以看出–&lt;strong&gt;同一个IP在短时间产生过多（超过mysql数据库max_connection_errors的最大值）中断的数据库连接而导致的阻塞.&lt;/strong&gt;
　　&lt;/p&gt;
&lt;h3 id=&quot;解决方法：&quot;&gt;&lt;a href=&quot;#解决方法：&quot; class=&quot;headerlink&quot; title=&quot;解决方法：&quot;&gt;&lt;/a&gt;解决方法：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改Mysql配置文件的max_connection_errors数量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看max_connection_errors&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;variables like &#39;%max_connection_errors%&#39;;```&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 修改max_connection_errors的数量 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```set global max_connect_errors = 500;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用mysqladmin flush-hosts命令清理一下hosts文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找出mysqladmin位置&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;mysqladmin```&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 进到相关目录下执行以下命令：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```/usr/bin/mysqladmin flush-hosts -hx.x.x.x -P3306 -uroot -prootpwd;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;直接在数据库执行下面命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须要有root权限&lt;br&gt;&lt;code&gt;flush hosts;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Error Message:message from server: “Host ‘x.x.x.x’ is blocked because of many connection errors; unblock with ‘mysqladmin flush-hosts’”&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.jiang-yu.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改系统默认启动模式</title>
    <link href="http://www.jiang-yu.cn/2016/06/14/Linux/%E4%BF%AE%E6%94%B9Linux%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.jiang-yu.cn/2016/06/14/Linux/修改Linux系统默认启动模式/</id>
    <published>2016-06-14T06:58:51.000Z</published>
    <updated>2016-06-14T06:09:31.000Z</updated>
    
    <content type="html">&lt;p&gt;　　为了避免每次开机都是进入到图形化界面，可以修改配置文件使得Linux默认为命令行模式启动。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　下面有两种方式来实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;临时生效：在图形化界面下可以打开Terminal终端，切换到root用户，输入init3即可切换到命令行模式，如果要再次回到图形化界面，可以使用startx就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;永久生效：修改 /etc/inittab  将启动模式修改为3&lt;br&gt;其中的数字可以设置为（0~6）&lt;br&gt;0 - 表示关闭系统（不要把默认设置成0）&lt;br&gt;1 - 单用户模式&lt;br&gt;2 - 多用户模式，没有NFS服务&lt;br&gt;3 - 多用户文本模式，是标准的运行级&lt;br&gt;5 - 图形模式&lt;br&gt;6 - 系统重新启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　为了避免每次开机都是进入到图形化界面，可以修改配置文件使得Linux默认为命令行模式启动。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux关机操作命令</title>
    <link href="http://www.jiang-yu.cn/2016/06/14/Linux/Linux%E5%85%B3%E6%9C%BA%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.jiang-yu.cn/2016/06/14/Linux/Linux关机命令/</id>
    <published>2016-06-14T06:58:51.000Z</published>
    <updated>2016-06-14T07:47:13.000Z</updated>
    
    <content type="html">&lt;p&gt;　　每天学一点Linux命令&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;halt 立刻关机&lt;br&gt;poweroff 立刻关机&lt;br&gt;shutdown -h now 立刻关机(root用户使用)&lt;br&gt;shutdown -h 10 10分钟后自动关机&lt;br&gt;如果是通过shutdown命令设置关机的话，可以用shutdown -c命令取消重启&lt;br&gt;推荐使用shutdown命令&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　每天学一点Linux命令&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jiang-yu.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VIM编辑器基础命令（一）</title>
    <link href="http://www.jiang-yu.cn/2016/06/14/VIM/vim_command_01%20/"/>
    <id>http://www.jiang-yu.cn/2016/06/14/VIM/vim_command_01 /</id>
    <published>2016-06-14T03:58:51.000Z</published>
    <updated>2016-06-14T05:37:34.000Z</updated>
    
    <content type="html">&lt;p&gt;　　在Linux下操作文件，不会VIM命令那就犹如战士上战场没带枪，所以作为一个合格的程序猿，必须要对基本的VI命令非常熟练的使用，本文开始将记录一系列VI命令的使用，方便快速查阅。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vi编辑器三种常用的模式：&lt;br&gt;　1.命令模式：就是用&lt;code&gt;vi/vim 文件名&lt;/code&gt; 进入文件后的模式&lt;br&gt;　2.插入模式（i）：就是在命令模式下按下ｉ或者ａ即可进入&lt;br&gt;　3.ex（扩展）模式：就是使用’:xxxx’ 方式&lt;br&gt;　在任何一种模式下按Esc键都会回到命令模式&lt;/li&gt;
&lt;li&gt;基础命令&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;命令模式&lt;/strong&gt;：&lt;br&gt;  a　在光标后插入文本&lt;br&gt;  i　在光标前插入文本&lt;br&gt;  o　在当前行的下面插入新行&lt;br&gt;  dd　删除整行&lt;br&gt;  u　撤销上一操作&lt;br&gt;  yy　复制当前行&lt;br&gt;  p　粘贴&lt;br&gt;  n+yy　复制n行&lt;br&gt;  r　替换当前字符&lt;br&gt;  /　查找关键字，按n键在关键字之间进行切换&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展模式&lt;/strong&gt;：&lt;br&gt;  :w　保存当前修改&lt;br&gt;  :q　退出&lt;br&gt;  :q!　强制退出，不保存修改&lt;br&gt;  :x　保存并退出，相当于:wq&lt;br&gt;  :set number　显示行号，或setnum&lt;br&gt;  :set nonumber　关闭行号显示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　在Linux下操作文件，不会VIM命令那就犹如战士上战场没带枪，所以作为一个合格的程序猿，必须要对基本的VI命令非常熟练的使用，本文开始将记录一系列VI命令的使用，方便快速查阅。&lt;br&gt;
    
    </summary>
    
      <category term="VIM" scheme="http://www.jiang-yu.cn/categories/VIM/"/>
    
    
      <category term="Linux，VIM" scheme="http://www.jiang-yu.cn/tags/Linux%EF%BC%8CVIM/"/>
    
  </entry>
  
</feed>
